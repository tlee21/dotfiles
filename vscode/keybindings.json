// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+s",
        "command": "actions.find"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+x .",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+x i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+b",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+m",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+o",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+f",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+m",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+o",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+\\",
        "command": "workbench.action.joinTwoGroups"
    },
    {
        "key": "cmd+k 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save",
    },
    {
        "key": "ctrl+x 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "cmd+k 2",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+x 2",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "cmd+k 3",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+x 3",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.quickSwitchWindow"
    },
    {
        "key": "ctrl+'",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "shift+alt+pagedown",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "shift+alt+pageup",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "cmd+k h",
        "command": "git.openChange"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
        "when": "!inEditorsPicker"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditor",
        "when": "!inEditorsPicker"
    },
    {
        "key": "ctrl+alt+cmd+down",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "ctrl+alt+cmd+up",
        "command": "workbench.action.terminal.focusPrevious"
    },
    {
        "key": "ctrl+x u",
        "command": "undo"
    },
    {
        "key": "ctrl+x o",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+alt+cmd+n",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "ctrl+alt+cmd+p",
        "command": "workbench.action.terminal.focusPrevious"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+f4",
        "command": "workbench.action.quit"
    },
    {
        "key": "cmd+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+x m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+x",
        "command": "ctrl+x",
        "when": "terminalFocus"
    },
]